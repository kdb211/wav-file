#include <iostream>
#include <fstream>
using namespace std;

int main() {
   ifstream xx("my.wav", ios::binary | ios::in);
   if (!xx) return 999;  // if the file is not found
   char header[44];
   xx.read(header, 44);
   xx.close();
   int* sampleRate = (int*)(header + 24);
   short* n;   n = (short*)(header + 22);   // numChannels
   int* fs;   fs = (int*)(header + 24);   // sampleRate
   int* b;   b = (int*)(header + 28); //  byteRate
   *n = 1;  // mono
   *b = n[0] * fs[0] * sizeof(short);

   int N = fs[0]; // number of samples for 1 second
   short* data;
   data = new short[N]; // allocate memory for 1 seconds mono
   const float pi = 3.141592;
   float a, f, T, dt = 1.0 / fs[0];


   ifstream ww("나비야1.txt");
   if (!ww) return 222;
   int v, eu, ss;
   char hh;
   float getFrequency(char hh);
   float getAmplitude(int ss);
   float getLength(int eu);
   ww >> v;

   ofstream yy("나비야3.wav", ios::binary | ios::out);
   if (!yy) return 666;  // 만일 파일이 열리지 않으면 프로그램을 끝낸다. 
   yy.write(header, 44 * sizeof(char)); // 헤더를 쓴다. 

   for (int i = 0; i < v; i++) {
      ww >> eu >> hh >> ss;
      f = getFrequency(hh);
      a = getAmplitude(ss);
      T = getLength(eu);
      float t = 0;
      for (int k = 0; k < fs[0] * T; k++, t += dt) {
         data[k] = (short)(a * sin(2.0 * pi * f * t));
      }
      yy.write((char*)data, T * fs[0] * sizeof(short));
   }
   
   yy.close();
   ww.close();
   return 1;
}
float getFrequency(char hh) {
   float f;
   if (hh == 'C')f = 261;
   else if (hh == 'D')f = 294;
   else if (hh == 'E')f = 330;
   else if (hh == 'F')f = 349;
   else if (hh == 'G')f = 392;
   return f;
}
float getLength(int eu) {
   float T;
   if (eu == 4)T = 1.0;
   else if (eu == 8) T = 0.5;
   return T;
}
float getAmplitude(int ss) {
   float a;
   if (ss == 5) a = 5000;
   else if (ss == 10) a = 10000;
   return a;

}
